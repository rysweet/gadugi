name: Test with UV

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install UV
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install Docker (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Docker is pre-installed on GitHub-hosted Ubuntu runners
        # Just verify it's working
        docker --version
        sudo systemctl status docker || true

    - name: Create virtual environment
      run: uv venv --python ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run tests
      run: uv run pytest tests/ -v --cov=. --cov-report=xml
      env:
        GADUGI_SIMULATE_GITHUB: "1"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
      with:
        file: ./coverage.xml

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install UV
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Run ruff check (lint and format)
      run: uv run ruff check .

    - name: Run ruff format check
      run: uv run ruff format --check .
