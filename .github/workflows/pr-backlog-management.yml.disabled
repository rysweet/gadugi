---
# PR Backlog Management Workflow
# Automatically manages PR backlog by evaluating readiness criteria
# and applying appropriate labels for human review

name: PR Backlog Management

on:
  pull_request:
    types: [ready_for_review, synchronize, opened]
  schedule:
    # Run daily at 9 AM UTC for backlog cleanup
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Specific PR number to evaluate (optional)'
        required: false
        type: string

env:
  CLAUDE_AUTO_APPROVE: true
  CLAUDE_GITHUB_ACTIONS: true
  PYTHONPATH: ${{ github.workspace }}/.claude/shared

jobs:
  manage-pr-backlog:
    name: Evaluate PR Readiness
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      checks: read
#      metadata: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper branch comparison
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Prepare workspace
        run: |
          # Create necessary directories
          mkdir -p ~/.claude/artifacts
          mkdir -p ~/.claude/logs
          mkdir -p .github/workflow-states

          # Set proper permissions
          chmod 755 ~/.claude/artifacts
          chmod 755 ~/.claude/logs
          chmod 755 .github/workflow-states

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml
          # Install GitHub CLI for repository operations
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
            sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
            sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Determine processing mode
        id: mode
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "mode=single" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ] && \
               [ -n "${{ github.event.inputs.pr_number }}" ]; then
            echo "mode=single" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "mode=backlog" >> $GITHUB_OUTPUT
          fi

      - name: Run PR Backlog Manager
        id: pr_backlog
        run: |
          cd ${{ github.workspace }}
          echo "ü§ñ Starting PR Backlog Manager..."
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Python path: $PYTHONPATH"

          # Validate environment
          if [ ! -f ".claude/agents/pr-backlog-manager/github_actions_integration.py" ]; then
            echo "‚ùå PR Backlog Manager script not found"
            exit 1
          fi

          # Run the PR Backlog Manager
          python3 -m .claude.agents.pr-backlog-manager.github_actions_integration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAX_PROCESSING_TIME: 600
          RATE_LIMIT_THRESHOLD: 50

      - name: Upload processing logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pr-backlog-processing-logs-${{ github.run_id }}
          path: |
            ~/.claude/artifacts/
            ~/.claude/logs/
            ./.github/workflow-states/
          retention-days: 30

      - name: Comment on PR (single mode)
        if: steps.mode.outputs.mode == 'single' && (success() || failure())
        run: |
          if [ "${{ steps.pr_backlog.outcome }}" = "success" ]; then
            STATUS_EMOJI="‚úÖ"
            STATUS_TEXT="completed successfully"
            READY_STATUS="${{ steps.pr_backlog.outputs.pr_ready }}"
            READINESS_SCORE="${{ steps.pr_backlog.outputs.readiness_score }}"
            DETAILS="**Ready for Review:** ${READY_STATUS}
            **Readiness Score:** ${READINESS_SCORE}%"
          else
            STATUS_EMOJI="‚ùå"
            STATUS_TEXT="encountered errors"
            DETAILS="Please check the workflow logs for details."
          fi

          gh pr comment ${{ steps.mode.outputs.pr_number }} --body \
            "${STATUS_EMOJI} **PR Backlog Manager Evaluation**

            The automated PR readiness evaluation has ${STATUS_TEXT}.

            ${DETAILS}

            **Processing Details:**
            - Event: ${{ github.event_name }}
            - Workflow Run: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')

            *This comment was generated automatically by the PR Backlog Manager.*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
