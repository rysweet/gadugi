from typing import Any, Dict, List

class DockerClient:
    def __init__(self) -> None: ...
    @property
    def images(self) -> ImageCollection: ...
    @property
    def containers(self) -> ContainerCollection: ...
    def ping(self) -> Dict[str, Any]: ...

class ImageCollection:
    def build(
        self,
        path: str,
        tag: str,
        rm: bool = True,
        pull: bool = True,
        nocache: bool = False,
    ) -> tuple[Any, Any]: ...
    def get(self, name: str) -> Any: ...
    def list(self) -> List[Any]: ...
    def remove(self, image_id: str, force: bool = False) -> None: ...

class ContainerCollection:
    def list(self, all: bool = False) -> List[Any]: ...
    def create(self, image: str, **kwargs: Any) -> Any: ...

class Container:
    @property
    def id(self) -> str: ...
    @property
    def name(self) -> str: ...
    def start(self) -> None: ...
    def stop(self, timeout: int = 10) -> None: ...
    def remove(self, force: bool = False) -> None: ...
    def exec_run(self, cmd: str, **kwargs: Any) -> tuple[int, bytes]: ...

errors: Any
models: Any
types: Any

def from_env() -> DockerClient: ...
